/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as DownloadIndexImport } from './routes/download/index'
import { Route as DiscordIndexImport } from './routes/discord/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as GithubNameImport } from './routes/github/$name'
import { Route as DiscordFlwImport } from './routes/discord/flw'
import { Route as BlogNewImport } from './routes/blog/new'
import { Route as BlogIdImport } from './routes/blog/$id'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DownloadIndexRoute = DownloadIndexImport.update({
  path: '/download/',
  getParentRoute: () => rootRoute,
} as any)

const DiscordIndexRoute = DiscordIndexImport.update({
  path: '/discord/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const GithubNameRoute = GithubNameImport.update({
  path: '/github/$name',
  getParentRoute: () => rootRoute,
} as any)

const DiscordFlwRoute = DiscordFlwImport.update({
  path: '/discord/flw',
  getParentRoute: () => rootRoute,
} as any)

const BlogNewRoute = BlogNewImport.update({
  path: '/blog/new',
  getParentRoute: () => rootRoute,
} as any)

const BlogIdRoute = BlogIdImport.update({
  path: '/blog/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/blog/$id': {
      id: '/blog/$id'
      path: '/blog/$id'
      fullPath: '/blog/$id'
      preLoaderRoute: typeof BlogIdImport
      parentRoute: typeof rootRoute
    }
    '/blog/new': {
      id: '/blog/new'
      path: '/blog/new'
      fullPath: '/blog/new'
      preLoaderRoute: typeof BlogNewImport
      parentRoute: typeof rootRoute
    }
    '/discord/flw': {
      id: '/discord/flw'
      path: '/discord/flw'
      fullPath: '/discord/flw'
      preLoaderRoute: typeof DiscordFlwImport
      parentRoute: typeof rootRoute
    }
    '/github/$name': {
      id: '/github/$name'
      path: '/github/$name'
      fullPath: '/github/$name'
      preLoaderRoute: typeof GithubNameImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/discord/': {
      id: '/discord/'
      path: '/discord'
      fullPath: '/discord'
      preLoaderRoute: typeof DiscordIndexImport
      parentRoute: typeof rootRoute
    }
    '/download/': {
      id: '/download/'
      path: '/download'
      fullPath: '/download'
      preLoaderRoute: typeof DownloadIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/blog/$id': typeof BlogIdRoute
  '/blog/new': typeof BlogNewRoute
  '/discord/flw': typeof DiscordFlwRoute
  '/github/$name': typeof GithubNameRoute
  '/blog': typeof BlogIndexRoute
  '/discord': typeof DiscordIndexRoute
  '/download': typeof DownloadIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/blog/$id': typeof BlogIdRoute
  '/blog/new': typeof BlogNewRoute
  '/discord/flw': typeof DiscordFlwRoute
  '/github/$name': typeof GithubNameRoute
  '/blog': typeof BlogIndexRoute
  '/discord': typeof DiscordIndexRoute
  '/download': typeof DownloadIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/blog/$id': typeof BlogIdRoute
  '/blog/new': typeof BlogNewRoute
  '/discord/flw': typeof DiscordFlwRoute
  '/github/$name': typeof GithubNameRoute
  '/blog/': typeof BlogIndexRoute
  '/discord/': typeof DiscordIndexRoute
  '/download/': typeof DownloadIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/blog/$id'
    | '/blog/new'
    | '/discord/flw'
    | '/github/$name'
    | '/blog'
    | '/discord'
    | '/download'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/blog/$id'
    | '/blog/new'
    | '/discord/flw'
    | '/github/$name'
    | '/blog'
    | '/discord'
    | '/download'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/blog/$id'
    | '/blog/new'
    | '/discord/flw'
    | '/github/$name'
    | '/blog/'
    | '/discord/'
    | '/download/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  BlogIdRoute: typeof BlogIdRoute
  BlogNewRoute: typeof BlogNewRoute
  DiscordFlwRoute: typeof DiscordFlwRoute
  GithubNameRoute: typeof GithubNameRoute
  BlogIndexRoute: typeof BlogIndexRoute
  DiscordIndexRoute: typeof DiscordIndexRoute
  DownloadIndexRoute: typeof DownloadIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  BlogIdRoute: BlogIdRoute,
  BlogNewRoute: BlogNewRoute,
  DiscordFlwRoute: DiscordFlwRoute,
  GithubNameRoute: GithubNameRoute,
  BlogIndexRoute: BlogIndexRoute,
  DiscordIndexRoute: DiscordIndexRoute,
  DownloadIndexRoute: DownloadIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/blog/$id",
        "/blog/new",
        "/discord/flw",
        "/github/$name",
        "/blog/",
        "/discord/",
        "/download/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/blog/$id": {
      "filePath": "blog/$id.tsx"
    },
    "/blog/new": {
      "filePath": "blog/new.tsx"
    },
    "/discord/flw": {
      "filePath": "discord/flw.tsx"
    },
    "/github/$name": {
      "filePath": "github/$name.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/discord/": {
      "filePath": "discord/index.tsx"
    },
    "/download/": {
      "filePath": "download/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
